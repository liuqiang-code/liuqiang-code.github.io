<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>刘强</title>
    <description>欢迎来到我的个人博客~</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 12 Jul 2020 15:48:30 +0800</pubDate>
    <lastBuildDate>Sun, 12 Jul 2020 15:48:30 +0800</lastBuildDate>
    <generator>Jekyll v3.8.5</generator>
    
      <item>
        <title>Git教程</title>
        <description>&lt;h3 id=&quot;介绍&quot;&gt;介绍&lt;/h3&gt;

&lt;p&gt;　　同生活中的许多伟大事物一样，Git 诞生于一个极富纷争大举创新的年代。&lt;/p&gt;

&lt;p&gt;　　Git的作者Linus，同样是Linux 的缔造者，为了高度推举开源的大旗和更好的开发和管理Linux，开发出了Git这个优秀的版本版本控制系统&lt;/p&gt;

&lt;p&gt;　　作为一位开发者，熟悉掌握Git是一项必备技能，如果连自己编写的代码都不能做到很好的控制，那我们还能写出什么优秀的代码。现在基于Git的版本控制软件有很多，比如：Sourcetree、TortoiseGit等工具，但是本人还是推荐使用命令行操作，因为只有熟练的使用命令行，才能更好的理解底层原理。&lt;/p&gt;

&lt;h3 id=&quot;安装git&quot;&gt;安装Git&lt;/h3&gt;
&lt;p&gt;参考&lt;a href=&quot;https://git-scm.com/book/zh/v2/%E8%B5%B7%E6%AD%A5-%E5%AE%89%E8%A3%85-Git&quot;&gt;官方安装教程&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;配置git&quot;&gt;配置Git&lt;/h3&gt;

&lt;p&gt;安装完成后，还需要最后一步设置，在命令行输入：&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git config --global user.name &quot;User Name&quot;
git config --global user.email &quot;email@example.com&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;–global：使用该参数时，Git会修改 ~/.gitconfig 或 ~/.config/git/config 文件里面的用户名和邮箱地址。该配置会默认作用于所有Git管理的仓库，如果需要更改某个仓库下的用户名和邮箱信息，可以使用 git config 命令，不携带 –global 选项，也可以手动修改 .git/config 文件里面用户和邮箱信息。&lt;/p&gt;

&lt;h3 id=&quot;常用命令&quot;&gt;常用命令：&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;git init（创建Git版本库）&lt;/li&gt;
    &lt;li&gt;git add .（全部添加到暂存区）&lt;/li&gt;
    &lt;li&gt;git commit -m ‘commit message’（提交暂存区的记录到本地仓库）&lt;/li&gt;
    &lt;li&gt;git config (配置和获取Git环境参数)&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;常见问题&quot;&gt;常见问题：&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;配置了.gitignore的忽略项但是不起作用，解决办法：清理本地库的缓存，并且重新添加版本库。
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git rm -r --cached .
git add .
git commit -m &quot;update .gitignore&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;转载请注明：&lt;a href=&quot;https://liuqiang-code.github.io/&quot;&gt;刘强的博客&lt;/a&gt; » &lt;a href=&quot;https://liuqiang-code.github.io/2020/07/GitCourse/&quot;&gt;点击阅读原文&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Sun, 12 Jul 2020 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2020/07/GitCourse/</link>
        <guid isPermaLink="true">http://localhost:4000/2020/07/GitCourse/</guid>
        
        <category>Git</category>
        
        
      </item>
    
  </channel>
</rss>
